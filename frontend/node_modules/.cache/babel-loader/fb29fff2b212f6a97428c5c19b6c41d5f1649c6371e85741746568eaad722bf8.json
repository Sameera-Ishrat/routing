{"ast":null,"code":"var _jsxFileName = \"/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, useActionData, useNavigate, useNavigation, redirect, json } from \"react-router-dom\";\nimport classes from \"./EventForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  const navigate = useNavigate();\n  const data = useActionData(); // useActionData is used when you want to validate the form from backend\n\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n  return (\n    /*#__PURE__*/\n    // <Form method='POST' className={classes.form}>\n    _jsxDEV(Form, {\n      method: method,\n      className: classes.form,\n      children: [data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          name: \"title\",\n          required: true,\n          defaultValue: event ? event.title : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          type: \"url\",\n          name: \"image\",\n          required: true,\n          defaultValue: event ? event.image : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          name: \"date\",\n          required: true,\n          defaultValue: event ? event.data : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          rows: \"5\",\n          required: true,\n          defaultValue: event ? event.description : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cancelHandler,\n          disabled: isSubmitting,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          children: isSubmitting ? \"Submitting\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(EventForm, \"lkj31A2CAttKPcPDT1ohetNewig=\", false, function () {\n  return [useNavigate, useActionData, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport const action = async ({\n  request,\n  params\n}) => {\n  console.log(request, \"REQUEST\");\n  const method = request.method;\n  const data = await request.formData();\n  const enteredData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  let url = \"http://localhost:8080/events\";\n  if (method === \"PATCH\") {\n    const eventId = params.eventId;\n    url = \"http://localhost:8080/events/\" + eventId;\n  }\n  const response = await fetch(url, {\n    method: method,\n    body: JSON.stringify(enteredData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"POST,PATCH,OPTIONS\"\n    }\n  });\n\n  // Form validation from backend 422 is defined at backend\n\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      messsage: \"Cannot load new event\"\n    }, {\n      status: 500\n    });\n  }\n\n  // redirect to events page after form submission\n\n  return redirect(\"/events\");\n};\n\n// With the help of useNavigation hook ,\n// we can make the button text read to submitting.\n\n/****\n * We are using data = useActionLoader() to validate the input from the backend\n * This data is being validated inside the Form\n * Also in the NewEventPage add this inside the action for input validation\n * if(response.status === 422) {\n  return response;\n}\n * \n */\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useActionData","useNavigate","useNavigation","redirect","json","classes","jsxDEV","_jsxDEV","EventForm","method","event","_s","navigate","data","navigation","isSubmitting","state","cancelHandler","className","form","children","errors","Object","values","map","err","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","defaultValue","title","image","rows","description","actions","onClick","disabled","_c","action","request","params","console","log","formData","enteredData","get","date","url","eventId","response","fetch","body","JSON","stringify","headers","status","ok","messsage","$RefreshReg$"],"sources":["/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/components/EventForm.js"],"sourcesContent":["import {\n  Form,\n  useActionData,\n  useNavigate,\n  useNavigation,\n  redirect,\n  json,\n} from \"react-router-dom\";\n\nimport classes from \"./EventForm.module.css\";\n\nfunction EventForm({ method, event }) {\n  const navigate = useNavigate();\n\n  const data = useActionData(); // useActionData is used when you want to validate the form from backend\n\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n\n  return (\n    // <Form method='POST' className={classes.form}>\n    <Form method={method} className={classes.form}>\n      {data && data.errors && (\n        <ul>\n          {Object.values(data.errors).map((err) => (\n            <li key={err}>{err}</li>\n          ))}\n        </ul>\n      )}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          required\n          defaultValue={event ? event.title : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input\n          id=\"image\"\n          type=\"url\"\n          name=\"image\"\n          required\n          defaultValue={event ? event.image : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          required\n          defaultValue={event ? event.data : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          rows=\"5\"\n          required\n          defaultValue={event ? event.description : \"\"}\n        />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>\n          {isSubmitting ? \"Submitting\" : \"Save\"}\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\nexport const action = async ({ request, params }) => {\n  console.log(request, \"REQUEST\");\n\n  const method = request.method;\n\n  const data = await request.formData();\n\n  const enteredData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n  };\n\n  let url = \"http://localhost:8080/events\";\n\n  if (method === \"PATCH\") {\n    const eventId = params.eventId;\n    url = \"http://localhost:8080/events/\" + eventId;\n  }\n\n  const response = await fetch(url, {\n    method: method,\n    body: JSON.stringify(enteredData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"POST,PATCH,OPTIONS\",\n    },\n  });\n  \n\n  // Form validation from backend 422 is defined at backend\n\n  if (response.status === 422) {\n    return response;\n  }\n\n  if (!response.ok) {\n    throw json({ messsage: \"Cannot load new event\" }, { status: 500 });\n  }\n\n  // redirect to events page after form submission\n\n  return redirect(\"/events\");\n};\n\n// With the help of useNavigation hook ,\n// we can make the button text read to submitting.\n\n/****\n * We are using data = useActionLoader() to validate the input from the backend\n * This data is being validated inside the Form\n * Also in the NewEventPage add this inside the action for input validation\n * if(response.status === 422) {\n  return response;\n}\n * \n */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}