{"ast":null,"code":"var _jsxFileName = \"/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/pages/NewEventPage.js\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { Navigate, json } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport const action = async ({\n  request,\n  params\n}) => {\n  const data = await request.formData;\n  const enteredData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    body: JSON.stringify(enteredData)\n  });\n  if (!response.ok) {\n    throw json({\n      messsage: 'Cannot load new event'\n    }, {\n      status: 500\n    });\n  }\n\n  // navigate to events page after form submission\n\n  Navigate('/events');\n};\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","Navigate","json","jsxDEV","_jsxDEV","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","enteredData","title","get","image","date","description","response","fetch","method","body","JSON","stringify","ok","messsage","status","$RefreshReg$"],"sources":["/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import React from 'react'\nimport EventForm from '../components/EventForm'\nimport { Navigate, json } from 'react-router'\n\nconst NewEventPage = () => {\n  return (\n    <div>\n      <EventForm />\n    </div>\n  )\n}\n\nexport default NewEventPage\n\nexport const action = async({request , params}) => {\nconst data = await request.formData;\n\nconst enteredData = {\n  title : data.get('title'),\n  image : data.get('image'),\n  date : data.get('date'),\n  description : data.get\n}\n\nconst response = await fetch('http://localhost:8080/events',{\n  method : 'POST',\n  body : JSON.stringify(enteredData),\n})\nif(!response.ok) {\n  throw json({messsage:'Cannot load new event'} , {status:500})\n}\n\n// navigate to events page after form submission\n\nNavigate('/events');\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,QAAQ,EAAEC,IAAI,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACJ,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAAAC,EAAA,GANKN,YAAY;AAQlB,eAAeA,YAAY;AAE3B,OAAO,MAAMO,MAAM,GAAG,MAAAA,CAAM;EAACC,OAAO;EAAGC;AAAM,CAAC,KAAK;EACnD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ;EAEnC,MAAMC,WAAW,GAAG;IAClBC,KAAK,EAAGH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACzBC,KAAK,EAAGL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACzBE,IAAI,EAAGN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACvBG,WAAW,EAAGP,IAAI,CAACI;EACrB,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IAC1DC,MAAM,EAAG,MAAM;IACfC,IAAI,EAAGC,IAAI,CAACC,SAAS,CAACX,WAAW;EACnC,CAAC,CAAC;EACF,IAAG,CAACM,QAAQ,CAACM,EAAE,EAAE;IACf,MAAM3B,IAAI,CAAC;MAAC4B,QAAQ,EAAC;IAAuB,CAAC,EAAG;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAC/D;;EAEA;;EAEA9B,QAAQ,CAAC,SAAS,CAAC;AACnB,CAAC;AAAA,IAAAU,EAAA;AAAAqB,YAAA,CAAArB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}