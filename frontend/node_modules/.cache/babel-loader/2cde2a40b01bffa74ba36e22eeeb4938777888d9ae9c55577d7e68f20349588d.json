{"ast":null,"code":"var _jsxFileName = \"/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/pages/EventsPage.js\";\n// import React,{useState,useEffect} from 'react';\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  //const data = useLoaderData();\n  //const events = data.events;\n\n  console.log(data, \"DATA\");\n  console.log(events, \"EVENTS\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n    //throw new Response(JSON.stringify({message:'Could not fetch events'},{status: 500}))\n  } else {\n    return response;\n    // const resData = await response.json();\n    // console.log(resData,\"data\");\n    // return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","json","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","console","log","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["// import React,{useState,useEffect} from 'react';\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData ,json } from 'react-router-dom';\n\nconst EventsPage = () => {\n\n//const data = useLoaderData();\n//const events = data.events;\n\nconsole.log(data,\"DATA\")\nconsole.log(events,\"EVENTS\");\n  return (\n    <>\n    <EventsList events={events} />\n    </>\n   \n   \n  )\n}\n\nexport default EventsPage\n\nexport async function loader() {\n  \n    const response = await fetch('http://localhost:8080/events');\n\n    if(!response.ok) {\n    throw json({message:'Could not fetch events'} , {status:500})\n//throw new Response(JSON.stringify({message:'Could not fetch events'},{status: 500}))\n   \n}else {\n      return response;\n      // const resData = await response.json();\n      // console.log(resData,\"data\");\n      // return resData.events;\n      \n    }\n\n}"],"mappings":";AAAA;AACA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAEzB;EACA;;EAEAC,OAAO,CAACC,GAAG,CAACC,IAAI,EAAC,MAAM,CAAC;EACxBF,OAAO,CAACC,GAAG,CAACE,MAAM,EAAC,QAAQ,CAAC;EAC1B,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACAR,OAAA,CAACJ,UAAU;MAACW,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC5B,CAAC;AAIP,CAAC;AAAAC,EAAA,GAdKV,UAAU;AAgBhB,eAAeA,UAAU;AAEzB,OAAO,eAAeW,MAAMA,CAAA,EAAG;EAE3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAMnB,IAAI,CAAC;MAACoB,OAAO,EAAC;IAAwB,CAAC,EAAG;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;IACjE;EAEA,CAAC,MAAK;IACA,OAAOJ,QAAQ;IACf;IACA;IACA;EAEF;AAEJ;AAAC,IAAAF,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}