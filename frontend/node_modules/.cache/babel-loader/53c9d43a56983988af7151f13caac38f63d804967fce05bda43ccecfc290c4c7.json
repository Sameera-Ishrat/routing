{"ast":null,"code":"var _jsxFileName = \"/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/pages/EventsDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense } from 'react';\n// import { useParams } from 'react-router'\n// import { Link } from 'react-router-dom';\n\nimport EventItem from \"../components/EventItem\";\nimport { json, redirect, useLoaderData, useRouteLoaderData, defer, Await } from 'react-router';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsDetailPage = () => {\n  _s();\n  //   const data = useLoaderData();\n  // console.log(data.event);\n\n  // const data = useRouteLoaderData('event-details')\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-details');\n  return /*#__PURE__*/_jsxDEV(Suspense, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(EventsDetailPage, \"YrSSyrTyKSWL5L21rA1p/NgF/LE=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventsDetailPage;\nexport default EventsDetailPage;\nasync function loadeEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n    //throw new Response(JSON.stringify({message:'Could not fetch events'},{status: 500}))\n  } else {\n    //return response;\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvent(id) {\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    throw json({\n      message: 'Cannot load Event Details'\n    }, {\n      status: 500\n    });\n  } else {\n    //return response;\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nexport const loader = ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadeEvents()\n  });\n};\n\n// export const loader = async({request,params}) => {\n// const id = params.eventId;\n// const response = await fetch(`http://localhost:8080/events/${id}`);\n// if(!response.ok) {\n//   throw json({message:'Cannot load Event Details'},{status:500})\n// }else {\n//   return response;\n// }\n// }\n\nexport const action = async ({\n  request,\n  params\n}) => {\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${eventId}`, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Cannot delete the event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n};\nvar _c;\n$RefreshReg$(_c, \"EventsDetailPage\");","map":{"version":3,"names":["React","Suspense","EventItem","json","redirect","useLoaderData","useRouteLoaderData","defer","Await","EventsList","jsxDEV","_jsxDEV","EventsDetailPage","_s","event","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadeEvents","response","fetch","ok","message","status","resData","loadEvent","id","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/pages/EventsDetailPage.js"],"sourcesContent":["import React, { Suspense } from 'react'\n// import { useParams } from 'react-router'\n// import { Link } from 'react-router-dom';\n\nimport EventItem from \"../components/EventItem\";\nimport { json, redirect, useLoaderData, useRouteLoaderData ,defer, Await} from 'react-router';\nimport EventsList from '../components/EventsList';\n\n\nconst EventsDetailPage = () => {\n  \n//   const data = useLoaderData();\n// console.log(data.event);\n\n// const data = useRouteLoaderData('event-details')\nconst {event , events} = useRouteLoaderData('event-details')\n  return (\n    <Suspense>\n      \n    </Suspense>\n    \n  )\n  \n}\n\nexport default EventsDetailPage\n\nasync function loadeEvents() {\n  const response = await fetch('http://localhost:8080/events');\n\n    if(!response.ok) {\n    throw json({message:'Could not fetch events'} , {status:500})\n//throw new Response(JSON.stringify({message:'Could not fetch events'},{status: 500}))\n   \n}else {\n      //return response;\n      const resData = await response.json();\n      return resData.events;\n      \n    }\n}\n\nasync function loadEvent(id) {\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if(!response.ok) {\n    throw json({message:'Cannot load Event Details'},{status:500})\n  }else {\n    //return response;\n    const resData = await response.json();\n    return resData.event;\n\n  }\n}\n\nexport const loader = ({request,params}) => {\n  const id = params.eventId;\n return defer({\n  event : loadEvent(id),\n  events : loadeEvents()\n })\n  }\n\n// export const loader = async({request,params}) => {\n// const id = params.eventId;\n// const response = await fetch(`http://localhost:8080/events/${id}`);\n// if(!response.ok) {\n//   throw json({message:'Cannot load Event Details'},{status:500})\n// }else {\n//   return response;\n// }\n// }\n\nexport const action = async({request,params}) => {\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${eventId}`,{\n    method:request.method\n  });\n  if(!response.ok) {\nthrow json({message:'Cannot delete the event'},{status:500})\n  }\n    return redirect('/events')\n  \n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;;AAEA,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,kBAAkB,EAAEC,KAAK,EAAEC,KAAK,QAAO,cAAc;AAC7F,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE/B;EACA;;EAEA;EACA,MAAM;IAACC,KAAK;IAAGC;EAAM,CAAC,GAAGT,kBAAkB,CAAC,eAAe,CAAC;EAC1D,oBACEK,OAAA,CAACV,QAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAIf,CAAC;AAAAN,EAAA,CAdKD,gBAAgB;EAAA,QAMGN,kBAAkB;AAAA;AAAAc,EAAA,GANrCR,gBAAgB;AAgBtB,eAAeA,gBAAgB;AAE/B,eAAeS,WAAWA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE1D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAC;IAAwB,CAAC,EAAG;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;IACjE;EAEA,CAAC,MAAK;IACA;IACA,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACnB,IAAI,CAAC,CAAC;IACrC,OAAOwB,OAAO,CAACZ,MAAM;EAEvB;AACJ;AAEA,eAAea,SAASA,CAACC,EAAE,EAAE;EAC3B,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BM,EAAG,EAAC,CAAC;EAClE,IAAG,CAACP,QAAQ,CAACE,EAAE,EAAE;IACf,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAC;IAA2B,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAChE,CAAC,MAAK;IACJ;IACA,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACnB,IAAI,CAAC,CAAC;IACrC,OAAOwB,OAAO,CAACb,KAAK;EAEtB;AACF;AAEA,OAAO,MAAMgB,MAAM,GAAGA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,KAAK;EAC1C,MAAMH,EAAE,GAAGG,MAAM,CAACC,OAAO;EAC1B,OAAO1B,KAAK,CAAC;IACZO,KAAK,EAAGc,SAAS,CAACC,EAAE,CAAC;IACrBd,MAAM,EAAGM,WAAW,CAAC;EACtB,CAAC,CAAC;AACD,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMa,MAAM,GAAG,MAAAA,CAAM;EAACH,OAAO;EAACC;AAAM,CAAC,KAAK;EAC/C,MAAMC,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC9B,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BU,OAAQ,EAAC,EAAC;IACrEE,MAAM,EAACJ,OAAO,CAACI;EACjB,CAAC,CAAC;EACF,IAAG,CAACb,QAAQ,CAACE,EAAE,EAAE;IACnB,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAC;IAAyB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAC1D;EACE,OAAOtB,QAAQ,CAAC,SAAS,CAAC;AAE9B,CAAC;AAAA,IAAAgB,EAAA;AAAAgB,YAAA,CAAAhB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}