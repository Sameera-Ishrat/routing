{"ast":null,"code":"var _jsxFileName = \"/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, useActionData, useNavigate, useNavigation } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const data = useActionData(); // useActionData is used when you want to validate the form from backend\n\n  const isSubmitting = navigation.state === 'submitting';\n  function cancelHandler() {\n    navigate('..');\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    className: classes.form,\n    children: [data && data.erro, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: event ? event.title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: event ? event.image : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: event ? event.data : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: event ? event.description : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        disabled: isSubmitting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Submitting' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"Uq3UEL5GWdmfvqFbTKM5sZxC7Cc=\", false, function () {\n  return [useNavigate, useNavigation, useActionData];\n});\n_c = EventForm;\nexport default EventForm;\n\n// With the help of useNavigation hook ,\n// we can make the button text read to submitting.\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useActionData","useNavigate","useNavigation","classes","jsxDEV","_jsxDEV","EventForm","method","event","_s","navigate","navigation","data","isSubmitting","state","cancelHandler","className","form","children","erro","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","required","defaultValue","title","image","rows","description","actions","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sameeraishrat/Desktop/12-adv-starting-project/frontend/src/components/EventForm.js"],"sourcesContent":["import { Form, useActionData, useNavigate, useNavigation } from 'react-router-dom';\n\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n  const navigate = useNavigate();\nconst navigation = useNavigation();\nconst data = useActionData() // useActionData is used when you want to validate the form from backend\n\n\nconst isSubmitting = navigation.state === 'submitting';\n\n\n  function cancelHandler() {\n    navigate('..');\n  }\n\n  return (\n    <Form method='POST' className={classes.form}>\n      {data && data.erro}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" required \n         defaultValue={event ?  event.title : ''}/>\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input id=\"image\" type=\"url\" name=\"image\" required\n        defaultValue={event ? event.image : ''}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input id=\"date\" type=\"date\" name=\"date\" required \n        defaultValue={event ? event.data : ''}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"5\" required \n        defaultValue={event ? event.description : ''}\n        />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled = {isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>\n         {isSubmitting ? 'Submitting' : 'Save'} \n          </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\n// With the help of useNavigation hook ,\n// we can make the button text read to submitting."],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}